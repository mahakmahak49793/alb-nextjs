{astrologerData?.map((value) => (
            <div 
              key={value?.id} 
              onClick={() => handleCardClick(value)}
              className='bg-white rounded-2xl shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden cursor-pointer group flex flex-col mb-4 md:mb-6'
            >
             
                <div className="relative bg-gradient-to-br from-orange-100 via-yellow-50 to-orange-200 w-full h-48 overflow-hidden sm:h-64 md:h-72 lg:h-80 xl:h-80">

                <img
                  alt={value?.astrologerName || "Consultant"}
                  loading="lazy"
                  className='w-full h-full object-cover group-hover:scale-105 transition-transform duration-300  object-top'
                  src={web_urls + value?.profileImage}
                />
              </div>

              {/* Content Section */}
              <div className='px-3 py-3 flex-1 flex flex-col gap-1 md:gap-5'>
                {/* Name */}
              <h3 className='text-sm sm:text-base font-bold text-gray-900 leading-tight capitalize truncate w-full px-0.5'>
                {value?.astrologerName}
              </h3>

                {/* Stars and Experience */}
                <div className="flex justify-between items-center">
                  <div className="flex items-center">
                    {renderStars(value?.rating)} 
                  </div>
                  <p className="text-gray-600 text-xs whitespace-nowrap">
                    {value?.experience}+ yrs
                  </p>
                </div>

                {/* Expertise Tags */}
                <div className="flex flex-wrap gap-1">
                  {(value?.mainExpertise?.slice(0, 3) || []).map((expertise, index) => (
                    <span 
                      key={expertise._id || index} 
                      className="bg-blue-50 text-blue-700 px-2 py-0.5 rounded text-[10px] sm:text-xs font-medium line-clamp-1"
                    >
                      {expertise?.mainExpertise}
                    </span>
                  ))}
                  {value?.mainExpertise?.length > 3 && (
                    <span className="bg-gray-50 text-gray-600 px-2 py-0.5 rounded text-[10px] sm:text-xs font-medium">
                      +{value?.mainExpertise?.length - 3}
                    </span>
                  )}
                </div>
                
                {/* Languages */}
                <div className="flex items-center gap-1.5 text-gray-600">
                  <svg className="w-3.5 h-3.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129"></path>
                  </svg>
                  <span className="text-xs line-clamp-1">
                    {value?.language?.slice(0, 2).join(', ') || 'English'}
                  </span>
                  {value?.language?.length > 2 && (
                    <span className="text-gray-400 text-xs">+{value?.language?.length - 2}</span>
                  )}
                </div>

                {/* Price and Button */}
                <div className='flex flex-col xs:flex-row xs:items-center xs:justify-between gap-2 pt-2 mt-auto border-t border-gray-100'>
                  <span className='text-lg sm:text-xl font-bold text-red-700'>
                    â‚¹{value?.consultationPrices?.[0]?.price?.toLocaleString('en-IN') || '9,999'}
                  </span>
                  <button className='bg-red-700 hover:bg-red-800 text-white px-3 py-1.5 rounded-lg font-semibold text-xs transition-colors duration-200 shadow-md w-full xs:w-auto'>
                    Book Now
                  </button>
                </div>
              </div>
            </div>
          ))}